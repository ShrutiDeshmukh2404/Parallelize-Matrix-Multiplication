#include <omp.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 1000

void matrix_multiply_static(int a[SIZE][SIZE], int b[SIZE][SIZE], int c[SIZE][SIZE]) {
    #pragma omp parallel for schedule(static)
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            c[i][j] = 0;
            for (int k = 0; k < SIZE; k++) {
                c[i][j] += a[i][k] * b[k][j];
            }
        }
    }
}

int main() {
    int a[SIZE][SIZE], b[SIZE][SIZE], c[SIZE][SIZE];
    clock_t start, end;

    // Initialize matrices
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            a[i][j] = rand() % 10;
            b[i][j] = rand() % 10;
        }
    }

    start = clock();
    matrix_multiply_static(a, b, c);
    end = clock();

    printf("Static Scheduling Execution Time: %lf seconds\n", (double)(end - start) / CLOCKS_PER_SEC);
    return 0;
}
